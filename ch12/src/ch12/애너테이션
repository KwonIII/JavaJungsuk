애너테이션이란?
-주석처럼 프로그래밍 언어에 영향을 미치지 않으며, 유용한 정보를 제공

@Override
-오버라이딩을 올바르게 했는지 컴파일러가 체크하게 된다.
-오버라이딩 할 때 메서드이름을 잘못적는 실수를 하는 경우가 많다.
class Parent{
	void parentMethod(){}
}
class Child extends Parent{
	void parentmethod(){}	//오버라이딩 하려 했으나 실수로 이름을 잘못적음
}
-오버라이딩 할 때는 메서드 선언부 앞에 @Override를 붙이자.


@Deprecated
-앞으로 사용하지 않을 것을 권장하는 필드나 메서드에 붙인다.
-@Deprecated의 사용 예, Date클래스의 getDate()
@Deprecated
public int getDate(){
	return normalize().getDayOfMonth();
}

@Target
-에너테이션을 정의할 때, 적용대상 지정에 사용

@Retention
-에너테이션이 유지(retention)되는 기간을 지정하는데 사용
SOURCE: 소스파일에만 존재. 클래스파일에는 존재하지 않음
RUNTIME: 클래스 파일에 존재. 실행시에 사용가능

-컴파일러에 의해 사용되는 에너테이션의 유지 정책은 SOURCE이다.
-실행시에 사용 가능한 애너테이션의 정책은 RNNTIME이다.
