지네릭스(Generics)란?
- 컴파일 시 타입을 체크해 주는 기능(compile-time type check) - JDK1.5
- 객체의 타입 안정성을 높이고 형변환의 번거로움을 줄여줌 -> 코드가 간결해진다.

제한된 지네릭 클래스
-extends로 대입할 수 있는 타입을 제한
 
class FruitBox<T extends Fruit>{	//Fruit의 자손만 타입으로 지정가능
	ArraryList<T> list = new ArrayList<T>();
}

FruitBox<Apple> appleBox = new FruitBox<Apple>(); //OK.
FruitBox<Toy> toyBox = new FruitBox<Toy>();	//에러.Toy는 Fruit의 자손아님

-인터페이스의 경우에도 extends사용
interface Eatable{}
class FruitBox<T extends Eatable>{}

지네릭스의 제약
-타입 변수에 대입은 인스턴스 별로 다르게 가능
Box<Apple> appleBox = new Box<Apple>();	//OK. Apple객체만 저장가능
Box<Grape> grapeBox = new Box<Grape>();	//OK. Grape객체만 저장가능
-static멤버(static은 모든 instance에 공통)에 타입변수 사용불가
class Box<T>{
	static T item; //애러
	static int compare(T t1, T t2){}	//에러
	
}
-배열 생성할 때 타입 변수 사용불가. 타입 변수로 배열 선언은 가능
class Box<T>{
	T[] itemArr;	//OK. T타입의 배열을 위한 참조변수
	T[] toARray(){
		T[] tmpArr = new T[itemArr.length];	//에러. 지네릭 배열 생성 불가
	}
}
