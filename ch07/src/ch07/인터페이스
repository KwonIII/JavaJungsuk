인터페이스
-추상메서드의 집합
-구현된 것이 전혀 없는 설계도. 껍데기(모든 멤버가 public)

인터페이스는 추상메서드, 상수만으로 이루어져있고, 
추상클래스는 일반클래스인데 추상메서드를 가지고 있는 클래스이다(인스턴스나 생성자도 가질 수 잇다.)

interface 인터페이스이름{
	public static final 타입 상수이름 = 값;	//public static final 일부 또는 전부 생략가능
	public abstract 메서드이름(매개변수목록);	//인터페이스의 모든 메서드는 항상 public abstract이기 때문에 public abstract생략가능
}

-인터페이스의 조상은 인터페이스만 가능
-다중 상속이 가능(추상메서드는 충돌해도 문제없음)

인터페이스의 구현
-인터페이스에 정의된 추상 메서드를 완성하는 것

class 클래스이름 implements 인터페이스 이름{
	//인터페이스에 정의된 추상메서드를 모두 구현해야 한다.
	//일부만 구현하는 경우, 클래스앞에 abstract를 붙여야함.
}

인터페이스의 장점
-두 대상(객체)간의 연결,대화,소통을 돕는 중간역할을 한다.
-선언(설계)와 구현을 분리시킬 수 있게 한다.
-개발 시간을 단축할 수 있다.
-변경에 유리한 유연한 설계가 가능하다
-표준화가 가능하다
-서로 관계없는 클래스들을 관계를 맺어줄 수 있다.
